-------- Capítulo 22 () --------

------- Aula 1 (Nosso primeiro iframe) -------
-> Existem sites que recusam a requisição se estiverem dentro de iframes


--- HTML ---
-> <iframe src="caminho" frameborder="valor"> - tag para criação de uma instância de outro site ou outra página do seu próprio site na página atual de forma 'inline', apenas necessita do "caminho" e o "valor" do 'frameborder', que define o estilo de borda (É possívle escrever algo dentro da tag, mas aparecerá somente se não for possível entrar na página do iframe, também é possível redirecionar com uma tag <a>)
    -> Outros parâmetros opcionais no <iframe>:
        -> name: "nome" - para nomear o iframe e ser possível indexar numa tag <a>, é só colocar o atributo 'target' da tag <a> com o mesmo 'name' do <iframe>
        -> width: "tamanho" - largura do conteúdo
        -> height: "tamanho" - altura do conteúdo
        -> scrolling: "tipo" - sobre opções de rolagem
            -> auto - para criar barra de rolagem se necessário
            -> yes - para criar barra de rolagem
            -> no - para não criar barra de rolagem mesmo que exceda o conteúdo
        -> srcdoc: "código HTML" - é possível escrever HTML dentro desse parâmetro (tome cuidado, pois as aspas duplas de qualquer tag com parâmetros necessitará ser com aspas simples, e não duplas)
        -> sandbox: "sandbox" - bloqueia todos os métodos de leitura/escrita do iframe indexado, ideal para maior segurança, como: XSS e CrossScript
            -> allow-same-origin - permissão para coisas da mesma origem
            -> allow-forms - permissão para uso de formulários
            -> allow-scripts - permissão para uso de scripts
        -> referrerpolicy: "no-referrer-when-downgrade" - para coleta de dados do usuário para propagandas específicas
            -> no-referrer - para não coletar nenhum dado do usuário




------- Aula 2 (Configurações do iframe) -------
-> O tamanho padrão do iframe é 300px x 150px
-> O CSS tem predomínio sobre a estilização do '<iframe>' dentro do HTML




------- Aula 3 (Conteúdo local no iframe) -------
-> Há problemas de busca de indexação de tabelas usando iframe, caso contenha alguma informação que precise de indexação, utilize uma div ao invés de iframe




------- Aula 4 (Navegação no iframe) -------
-> É possível indexar o <iframe> dentro de uma tag <a>, dando um 'name' para o <iframe> e colocando o atributo 'target' do <a> com o mesmo nome do <iframe>




------- Aula 5 (Conteúdo estático em iframe) -------


------- Aula 6 (Inconvenientes do iframe) -------
-> Nunca use iframes para páginas que você quer que potencialmente sejam seus indexadores, pois os mecanismos de busca não funcionam perfeitamente em iframes
-> Sofwares de acessibilidade também tem problemas para acessar sites com iframes




------- Aula 7 (Tornando iframes mais seguros) -------


------- Aula 8 (Dicas interessantes para iframes) -------
-> É possívle incorporar quase de tudo no seu site se necessário




-------- Capítulo 23 () --------

------- Aula 1 (Projeto Redes Sociais) -------


------- Aula 2 (Organizando arquivos do do projeto) -------


------- Aula 3 (Criando a página principal) -------


------- Aula 4 (Posicionando o conteúdo na tela) -------


------- Aula 5 (Criando os botões de redes sociais) -------
-> Para deixar a imagem arredondada, faça 'border-radius: 50%;' no CSS

--- CSS ---
-> box-sizing: border-box - para fazer com que a borda faça parte da caixa que está mexendo
-> transition: transform 1s, border 1s - para fazer com que o conteúdo de 'transform' e o 'border' sejam feitos uma animação de '1s', que é 1 segundo




------- Aula 6 (Criando as páginas de cada rede) -------

--- CSS ---
-> ::-webkit-scrollbar { width: 0px; height: 0px; } - para tirar a barra de rolagem do site




------- Aula 7 (Personalizando as imagens do projeto) -------




-------- Capítulo 24 () --------

------- Aula 1 (Criando o primeiro Formulário) -------

--- HTML ---
-> <form> - tag para criação de formulários
    -> autocomplete= "on/off" - faz com que o formulário tire ou coloque a função de auto completar palavras já digitadas nele
    -> action= "backend.php" - faz com que seja enviado os campos digitados dentro do '<form>' para um "backend.php" para tratamento de dados
    -> method="tipo" - faz com que seja tenha um "tipo" de envio para o seu formulário
        -> GET - método padrão do formulário, serve para pegar dados do usuário (Utilizado para dados não sensíveis; Também utilizado para compartilhar link de busca; Tem limite de 3000 Bytes para envio)
        -> POST - método que serve para enviar dados a um backend por exemplo para cadastro (Utilizado para dados sensíveis; Não tem limite de 3000 Bytes)
-> <input> - tag para criar um campo de digitação para o usuário
    -> type: "tipo" - define o "tipo" do campo de digitação
        -> text - para definir como campo de texto normal
        -> password - para definir como campo de senha, tendo as letras substituídas com asteriscos ou bolinhas na hora da digitação
        -> submit - para definir como botão clicável para envio de dados
        -> reset - para definir um botão clicável para limpar os campos do formulário
        -> number - para definir um campo de digitação somente de números, pontos e hífen
        -> month - para definir um campo de digitação de mês-ano
        -> date - para definir um campo de digitação de dia-mês-ano
        -> time - para definir um campo de digitação de horas-minutos
        -> email - para definir um campo de digitação como e-mail
        -> tel - para definir um campo de digitação como telefone
        -> checkbox - para definir um campo de seleção com múltiplas escolhas
        -> radio - para definir um campo de seleção com uma única escolha
        -> color - para definir um campo de seleção de cor clicável
        -> range - para definir um campo de barra de seleção clicável
        -> file - para definir um campo de seleção de arquivo para envio
    -> name="nome" - da um "nome" a tag input
    -> id="identificador" - da um "identificador" a tag input
    -> value="texto" - da um valor a tag trabalhada, ou seja, escreve na caixa da tag algum "texto" inicialmente
    -> required - um parâmetro do input que faz com que o campo de digitação seja obrigatório preenchê-lo
    -> minlength="valor" - define para o campo de digitação um "valor" mínimo de caracteres digitados 
    -> maxlength="valor" - define para o campo de digitação um "valor" máximo de caracteres digitados
    -> size="valor" - define para o campo de digitação um "valor" para o tamanho da caixa de digitação de acordo com número de caracteres, suponha que o valor seja "8", então a caixa vai ter o tamanho ideal para conter somente 8 caracteres, caso for digitar mais ela irá ser deslocada 1 caractere para a direita sempre que digitar algo
    -> placeholder="texto" - define uma dica com "texto" para o usuário saber o que deverá ser digitado
    -> autocomplete="tipo" - para auto completar tudo que o usuário digitou do "tipo" que já existe no seu navegador, existem muitos tipos de auto completar neste parâmetro, então utilizar com o que se encaixa melhor para seu formulário

    -> min="valor" - para definir um "valor" mínimo a um campo de 'number'
    -> max="valor" - para definir um "valor" máximo a um campo de 'number'
    -> step="valor" - ao definir um campo como sendo 'number' ele terá um controle de setas ao lado direito, a cada clique na seta de cima, por padrão será adicionado 1, e a seta para baixo vai subtrair 1, mas com 'step' você pode definir um "valor" específico
    -> pattern="regex" - define uma expressão regular para um campo de digitação, para aceitar somente o que a expressão regular permitir

    -> checked - deixa o campo de seleção já marcado inicialmente

    -> list="lista" - define de qual "lista" de opções ele irá utilizar como base para selecionar uma opção, caso haja

    -> oninput="código-JavaScript" - cria um parâmetro que permite inserir códigos JavaScript para fazer cálculos por exemplo com as tags '<input>' e mostrar um resultado em um '<output>'




------- Aula 2 (Aprimorando Formulários com Label) -------
-> O identificador "name" é mais importante para o backend do que para o JavaScript e HTML, já o "id" é mais importante para o JavaScript
-> Por convenção num formulário, coloque o nome do "id" com sufixo "i" antes do nome, isto se deve para diferenciação do "name" e para utilização do '<label>', que identifica o significado de cada campo de digitação

--- HTML ---
-> <label for="id"> - da um significado semântico para o campo de digitação, sempre utilizar o "id" como sendo o identificador da label




------- Aula 3 (Métodos GET e POST) -------


------- Aula 4 (Atributos para input text e password) -------


------- Aula 5 (Elementos number month date e time) -------


------- Aula 6 (Compatibilidade com formulários) -------
-> Sempre se preocupar com os dispositivos que vão acessar seu site, para saber se são compatíveis com o seu código




------- Aula 7 (Formulários com telefone e email) -------
-> Toda expressão regular na no parâmetro 'pattern' inicia com '^' e termina com '$'

--- HTML ---
-> <fieldset> - para definir um contêiner que vai conter a obtenção de dados de campos de digitações
-> <legend> - define uma legenda para o '<fieldset>'




------- Aula 8 (Checkbox e radio) -------


------- Aula 9 (Color, range e file) -------
-> Utilizar o método POST no '<form>' quando for fazer envio de arquivos




------- Aula 10 (Select, datalist e textarea) -------

--- HTML ---
-> <select> - faz uma tag de seleção, que pode conter várisa opções
    -> name="nome" - para definir um nome para o '<select>'
    -> id="iid" - para definir um identificador para o '<select>'
-> <option> - tag para inserir uma opção dentro da tag '<select>'
    -> value="texto" - define o valor que será passado para o backend quando aquela opção for marcada
    -> selected - define aquele '<option>' como sendo o padrão selecionado inicialmente
-> <optgroup> - para definir um grupo de '<option>'
    -> label="nome" - para definir o nome do grupo de opções, ele não é selecionável no '<select>'
-> <datalist> - cria uma lista de opções que será vinculado a um '<input>', tem o mesmo comportamento do '<optgroup>', mas é possível digitar coisas dentro dele, e não só selecionar
    -> id="id" - cria um identificador para '<datalist>'
    -> <option> - insere opções que vão ser escolhidas dentro da tag '<input>' se necessário
-> <textarea> - cria um campo de texto que tem formatação específica para textos maiores
    -> name="nome" - da um "nome" a tag
    -> id="inome" - da um "inome" (identificador) para a tag
    -> cols="valor" - especifica o "valor" de colunas(caracteres) que será o limite por linha
    -> rows="valor" - especifica o "valor" de linhas que será o limite na mensagem




------- Aula 11 (Output em Formulários HTML) -------

--- HTML ---
-> <output> - para criar um campo de texto que não será enviado pelo formulário, mas servirá como referência para o usuário
    -> name="nome" - da um nome a tag '<output>'
    -> id="idnome" - da um identificador a tag '<output>'




-------- Capítulo 25 () --------

------- Aula 1 (O que são Media Queries?) -------
-> Media Queries são formas diferentes de você apresentar um conteúdo do site dependendo do dispositivo ou da ação




------- Aula 2 (Preparando um site para impressão) -------
-> Não é recomendado colocar propagandas, menus e rodapés na estilização do formato impresso

--- HTML ---
-> <link rel="stylesheet" href="style.css" media="tipo"> - tag para criação de um link para um css de um "tipo" de 'media'
    -> media="screen" - estilização para tela normal do navegador
    -> media="print" - estilização para quando for imprimir a página do site
    -> media="all" - estilização para todos os tipos de telas
    -> media="screen and (orientation: portrait)" - estilização para telas em modo vertical (o que está entre parênteses são chamadas de Media Features)
    -> media="screen and (orientation: landscape)" - estilização para telas em modo paisagem (o que está entre parênteses são chamadas de Media Features)




------- Aula 3 (Múltiplas Media Features) -------


------- Aula 4 (Seguindo a orientação do dispositivo(part. 1)) -------


------- Aula 5 (Seguindo a orientação do dispositivo(part. 2)) -------

--- CSS ---
-> @media screen and (orientation: portrait){ formatação }  - faz uma 'formatação' para dispositivos em modo retrato
-> @media screen and (orientation: landscape){ formatação }  - faz uma 'formatação' para dispositivos em modo paisagem




------- Aula 6 (Mobile First - HTML5 e CSS3) -------
-> Iniciar os projetos de um site criando todo o layout mobile primeiramente, faz com que o Google te dê mais credibilidade na busca




------- Aula 7 (Iniciando um site mobile first) -------
-> Usar 'box-sizing: border-box' na configuração geral do seu site '* { formatação }' deixa melhor para conseguir configurar o site




------- Aula 8 (Device breakpoints) -------
-> Típicas resoluções para cada tipo de dispositivo (Typical Device Breakpoints):
    -> Pequenas telas - até 600px
    -> Celular - 600px em diante
    -> Tablet - 768px em diante
    -> Desktop/Laptop - 992px em diante
    -> Grandes telas - acima de 1200px
-> Se você fez seu site mobile first, então não precisa de estilização de '@media' para eles




------- Aula 9 (Exercício menu responsivo) -------


------- Aula 10 (Configurando layout do projeto) -------


------- Aula 11 (Criando um menu hambúrguer) -------

--- CSS ---
-> cursor: pointer - para modificar o tipo de ponteiro que aparecerá quando der :hover em uma tag




------- Aula 12 (Media queries para outros dispositivos) -------

--- JavaScript ---
-> id.style.display: tipo - para modificar o tipo de visualização de 'id'
    -> 'none' - para tirar o elemento da tela
    -> 'block' - para mostrar o elemento da tela como bloco
-> window.innerWidth - para acessar o tamanho da tela onde está sendo utilizado o site




-------- Capítulo 25 () --------

------- Aula 1 (Início do projeto tela de login) -------


------- Aula 2 (Versão mobile first da tela de login) -------


------- Aula 3 (Outras media queries para login) -------

--- CSS ---
-> float: direcao - faz com que o conteúdo em um contêiner seja direcionado a uma 'direcao'
    -> left - conteúdo é jogado para a esquerda
    -> right - conteúdo é jogado para a direita
-> transition-timing-function: tipo - faz com que a animação tenha diferentes 'tipo' de comportamentos
    -> ease - faz com que todas as animações ocorram ao mesmo tempo




------- Aula 4 (Criando o formulário de login) -------


------- Aula 5 (Aplicando estilo ao formulário de login) -------

--- CSS ---
-> form > input[type=submit] { formatação } - faz a seleção de um tipo de input do formulário e aplica sua 'formatação'




------- Aula 6 (Finalizando projeto tela de login) -------
-> Sempre colocar transform e transition na última linha do CSS para que ele sofra a ação depois de todas as formatações

--- CSS ---
-> calc(100% - 40px) - exemplo de cálculo que é possível fazer em qualquer tag que leva tamanho no seu parâmetro
-> transform: translateY(tamanho) - faz com que somente a posição Y do site sofra a ação de 'tamanho' de translação
-> input:focus-within { formatação } - faz com que haja uma 'formatação' quando o input está em foco